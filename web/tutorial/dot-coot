; -*-scheme-*-

; (set-console-display-commands-state 0)


(set-ligand-water-to-protein-distance-limits 1.5 3.6)

(set-map-sharpening-scale-limit 200)


; trackball niceness
(vt-surface 1)

; (set-colour-map-rotation-on-read-pdb-c-only-flag 1)
(set-colour-map-rotation-on-read-pdb-c-only-flag   1)

(set-idle-function-rotate-angle 0.1)

(set-default-bond-thickness 5)

(set-default-initial-contour-level-for-difference-map 7.0)


(define oca-server "http://oca.ebi.ac.uk")
(define oca-server "http://www.ebi.ac.uk/msd-srv/oca")


(set-residue-selection-flash-frames-number 1)

; show probe dots after we have refined a residue range
;(set-do-probe-dots-post-refine 1)

; (set-do-probe-dots-on-rotamers-and-chis 1)

(set-raster3d-bond-thickness 0.1)
(set-raster3d-atom-radius 0.1)


(no-coot-tips)

(define f
  (lambda ()
    (ideal-nucleic-acid "RNA" "A" "AGUD")))


; (set-dragged-refinement-steps-per-frame 4)

(add-planar-peptide-restraints)


(set-sticky-sort-by-date)

(set-filter-fileselection-filenames 1)


(ligand-expert)

; (set-add-terminal-residue-do-post-refine 1)

(add-key-binding "Refine Active Residue" "r" (lambda () (manual-refine-residues 0)))
(add-key-binding "Refine Active Residue AA" "x" (lambda () (refine-active-residue)))
(add-key-binding "Triple Refine" "t" (lambda () (manual-refine-residues 1)))
(add-key-binding "Triple Refine AA" "h" (lambda () (refine-active-residue-triple)))
(add-key-binding "Autofit Rotamer" "j" (lambda () (auto-fit-rotamer-active-residue)))
(add-key-binding "Pepflip" "q" (lambda () (pepflip-active-residue)))
(add-key-binding "Go To Blob" "g" (lambda () (blob-under-pointer-to-screen-centre)))
(add-key-binding "Add Water" "w" (lambda () (place-typed-atom-at-pointer "Water")))
(add-key-binding "Eigen-flip Ligand" "e" (lambda() (flip-active-ligand)))
(add-key-binding "Add Water +"  "W"
   (lambda ()
     (blob-under-pointer-to-screen-centre)
     (place-typed-atom-at-pointer "Water")
     (refine-active-residue)))

(add-key-binding "Add terminal residue" "y" 
   (lambda ()
     (using-active-atom
      (add-terminal-residue aa-imol aa-chain-id aa-res-no "auto" 1))))

(add-key-binding "Fill Partial" "k" 
   (lambda ()
     (using-active-atom
      (fill-partial-residue aa-imol aa-chain-id aa-res-no aa-ins-code))))


(add-key-binding "Toggle Ghosts" ":" 
                 (lambda () 
                   (let ((keyboard-ghosts-mol 
                          (let ((ls (model-molecule-list)))
                            (let loop ((ls ls))
                              (cond
                               ((null? ls) -1)
                               ((ncs-ghosts (car ls))
                                (car ls))
                               (else
                                (loop (cdr ls))))))))
                     (if (= (draw-ncs-ghosts-state keyboard-ghosts-mol) 0)
                         (set-draw-ncs-ghosts keyboard-ghosts-mol 1)
                         (set-draw-ncs-ghosts keyboard-ghosts-mol 0)))))

(add-key-binding "Hydrogens off" "["
                 (lambda ()
                   (let ((imol
                          (let ((active-atom (active-residue)))
                            (if active-atom
                                (car active-atom)
                                0))))
                   (set-draw-hydrogens imol 0))))

(add-key-binding "Hydrogens on" "]"
                 (lambda ()
                   (let ((imol
                          (let ((active-atom (active-residue)))
                            (if active-atom
                                (car active-atom)
                                0))))
                   (set-draw-hydrogens imol 1))))

(add-key-binding "Rotamers dialog for Active Residue" "Q"
   (lambda () 
     (using-active-atom
      (show-rotamers-dialog aa-imol aa-chain-id aa-res-no aa-ins-code aa-alt-conf))))

(add-key-binding "Rotamer name in Status Bar" "~" 
   (lambda ()
     (using-active-atom
      (let ((name (get-rotamer-name aa-imol aa-chain-id aa-res-no aa-ins-code)))
	(if (not name)
	    (add-status-bar-text "No name found")
	    (if (string=? "" name)
		(add-status-bar-text "No name for this")
		(add-status-bar-text (string-append "Rotamer name: " name))))))))



(add-key-binding "Sphere Refinement" "R"
   (lambda ()

     (if (not (valid-map-molecule? (imol-refinement-map)))
	 (info-dialog "Must set the refinement map"))

     (using-active-atom
      
      (let* ((rc-spec (list aa-chain-id aa-res-no aa-ins-code))
	     (ls (residues-near-residue aa-imol rc-spec 4.5)))
	(refine-residues aa-imol (cons rc-spec ls))))))
	

(add-key-binding "Sphere Regularization" "B"
   (lambda ()

     (using-active-atom
      
      (let* ((rc-spec (list aa-chain-id aa-res-no aa-ins-code))
	     (ls (residues-near-residue aa-imol rc-spec 4.5)))
	(regularize-residues aa-imol (cons rc-spec ls))))))
	

(add-key-binding "Edit Chi Angles" "X"
   (lambda ()
     (using-active-atom
      (edit-chi-angles aa-imol aa-chain-id aa-res-no aa-ins-code aa-alt-conf))))


(add-key-binding "Delete this water" "D" (lambda ()(apply delete-atom (active-residue))))


(add-key-binding "Jiggle Fit" "J" (lambda () 
				    (using-active-atom 
				     (fit-to-map-by-random-jiggle 
				      aa-imol aa-chain-id aa-res-no aa-ins-code 100 1.0))))


(add-key-binding "Step scrollable map number" "M" 
   (lambda()
     (let ((maps    (map-molecule-list))
	   (current (scroll-wheel-map)))
       (if (not (null? maps))
	   (let ((l (memq current maps)))
	     (set-scroll-wheel-map
	     (if (> (length l) 1) 
		 (cadr l)
		 (car maps))))))))

(add-key-binding "Delete Residue Hydrogens" "N"
   (lambda ()
     (using-active-atom (delete-residue-hydrogens aa-imol aa-chain-id aa-res-no aa-ins-code aa-alt-conf))))

(add-key-binding "Undo Symmetry View" "V" undo-symmetry-view)

   

